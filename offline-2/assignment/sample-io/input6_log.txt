Line# 1: Token <INT> Lexeme int found
Line# 1: Token <ID> Lexeme main found
	ScopeTable# 1
	4--> <main,ID>
Line# 1: Token <LPAREN> Lexeme ( found
Line# 1: Token <RPAREN> Lexeme ) found
Line# 1: Token <LCURL> Lexeme { found
Line# 2: Token <INT> Lexeme int found
Line# 2: Token <ID> Lexeme c found
	ScopeTable# 2
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 2: Token <COMMA> Lexeme , found
Line# 2: Token <ID> Lexeme i found
	ScopeTable# 2
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 2: Token <ASSIGNOP> Lexeme = found
Line# 2: Token <CONST_INT> Lexeme 0 found
Line# 2: Token <SEMICOLON> Lexeme ; found
Line# 3: Token <INT> Lexeme int found
Line# 3: Token <ID> Lexeme n found
	ScopeTable# 2
	1--> <n,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 3: Token <LSQUARE> Lexeme [ found
Line# 3: Token <ID> Lexeme c found
	c already exists in the current ScopeTable
Line# 3: Token <RSQUARE> Lexeme ] found
Line# 3: Token <COMMA> Lexeme , found
Line# 3: Token <ID> Lexeme x found
	ScopeTable# 2
	1--> <n,ID><x,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 3: Token <LSQUARE> Lexeme [ found
Line# 3: Token <ID> Lexeme c found
	c already exists in the current ScopeTable
Line# 3: Token <RSQUARE> Lexeme ] found
Line# 3: Token <COMMA> Lexeme , found
Line# 3: Token <ID> Lexeme y found
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 3: Token <LSQUARE> Lexeme [ found
Line# 3: Token <ID> Lexeme c found
	c already exists in the current ScopeTable
Line# 3: Token <RSQUARE> Lexeme ] found
Line# 3: Token <SEMICOLON> Lexeme ; found
Line# 4: Token <ID> Lexeme cin found
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 4: Token <BITOP> Lexeme >> found
Line# 4: Token <ID> Lexeme c found
	c already exists in the current ScopeTable
Line# 4: Token <SEMICOLON> Lexeme ; found
Line# 5: Token <IF> Lexeme if found
Line# 5: Token <LPAREN> Lexeme ( found
Line# 5: Token <ID> Lexeme c found
	c already exists in the current ScopeTable
Line# 5: Token <RELOP> Lexeme == found
Line# 5: Token <CONST_INT> Lexeme 0 found
Line# 5: Token <RPAREN> Lexeme ) found
Line# 5: Token <LCURL> Lexeme { found
Line# 6: Token <ID> Lexeme cout found
	ScopeTable# 3
	2--> <cout,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 6: Token <BITOP> Lexeme << found
Line# 6: Token <SINGLE LINE STRING> Lexeme "OOPS!" found
Line# 6: Token <SEMICOLON> Lexeme ; found
Line# 7: Token <RCURL> Lexeme } found
Line# 8: Token <ELSE> Lexeme else found
Line# 8: Token <LCURL> Lexeme { found
Line# 9: Token <WHILE> Lexeme while found
Line# 9: Token <LPAREN> Lexeme ( found
Line# 9: Token <ID> Lexeme i found
	ScopeTable# 4
	6--> <i,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 9: Token <RELOP> Lexeme < found
Line# 9: Token <ID> Lexeme c found
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 9: Token <RPAREN> Lexeme ) found
Line# 9: Token <LCURL> Lexeme { found
Line# 10: Token <ID> Lexeme cin found
	ScopeTable# 5
	5--> <cin,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 10: Token <BITOP> Lexeme >> found
Line# 10: Token <ID> Lexeme n found
	ScopeTable# 5
	1--> <n,ID>
	5--> <cin,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 10: Token <LSQUARE> Lexeme [ found
Line# 10: Token <ID> Lexeme i found
	ScopeTable# 5
	1--> <n,ID>
	5--> <cin,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 10: Token <RSQUARE> Lexeme ] found
Line# 10: Token <BITOP> Lexeme >> found
Line# 10: Token <ID> Lexeme x found
	ScopeTable# 5
	1--> <n,ID><x,ID>
	5--> <cin,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 10: Token <LSQUARE> Lexeme [ found
Line# 10: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 10: Token <RSQUARE> Lexeme ] found
Line# 10: Token <BITOP> Lexeme >> found
Line# 10: Token <ID> Lexeme y found
	ScopeTable# 5
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 10: Token <LSQUARE> Lexeme [ found
Line# 10: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 10: Token <RSQUARE> Lexeme ] found
Line# 10: Token <SEMICOLON> Lexeme ; found
Line# 11: Token <ID> Lexeme n found
	n already exists in the current ScopeTable
Line# 11: Token <LSQUARE> Lexeme [ found
Line# 11: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 11: Token <RSQUARE> Lexeme ] found
Line# 11: Token <INCOP> Lexeme -- found
Line# 11: Token <SEMICOLON> Lexeme ; found
Line# 12: Token <ID> Lexeme x found
	x already exists in the current ScopeTable
Line# 12: Token <LSQUARE> Lexeme [ found
Line# 12: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 12: Token <RSQUARE> Lexeme ] found
Line# 12: Token <INCOP> Lexeme -- found
Line# 12: Token <SEMICOLON> Lexeme ; found
Line# 13: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 13: Token <INCOP> Lexeme ++ found
Line# 13: Token <SEMICOLON> Lexeme ; found
Line# 14: Token <RCURL> Lexeme } found
Line# 15: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 15: Token <ASSIGNOP> Lexeme = found
Line# 15: Token <CONST_INT> Lexeme 0 found
Line# 15: Token <SEMICOLON> Lexeme ; found
Line# 16: Token <WHILE> Lexeme while found
Line# 16: Token <LPAREN> Lexeme ( found
Line# 16: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 16: Token <RELOP> Lexeme < found
Line# 16: Token <ID> Lexeme c found
	c already exists in the current ScopeTable
Line# 16: Token <RPAREN> Lexeme ) found
Line# 16: Token <LCURL> Lexeme { found
Line# 17: Token <IF> Lexeme if found
Line# 17: Token <LPAREN> Lexeme ( found
Line# 17: Token <ID> Lexeme n found
	ScopeTable# 6
	1--> <n,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 17: Token <LSQUARE> Lexeme [ found
Line# 17: Token <ID> Lexeme i found
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 17: Token <RSQUARE> Lexeme ] found
Line# 17: Token <MULOP> Lexeme % found
Line# 17: Token <CONST_INT> Lexeme 2 found
Line# 17: Token <RELOP> Lexeme == found
Line# 17: Token <CONST_INT> Lexeme 0 found
Line# 17: Token <RPAREN> Lexeme ) found
Line# 17: Token <LCURL> Lexeme { found
Line# 18: Token <ID> Lexeme n found
	ScopeTable# 7
	1--> <n,ID>
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 18: Token <LSQUARE> Lexeme [ found
Line# 18: Token <ID> Lexeme i found
	ScopeTable# 7
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 18: Token <RSQUARE> Lexeme ] found
Line# 18: Token <ASSIGNOP> Lexeme = found
Line# 18: Token <ID> Lexeme n found
	n already exists in the current ScopeTable
Line# 18: Token <LSQUARE> Lexeme [ found
Line# 18: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 18: Token <RSQUARE> Lexeme ] found
Line# 18: Token <MULOP> Lexeme / found
Line# 18: Token <CONST_INT> Lexeme 2 found
Line# 18: Token <SEMICOLON> Lexeme ; found
Line# 19: Token <IF> Lexeme if found
Line# 19: Token <LPAREN> Lexeme ( found
Line# 19: Token <ID> Lexeme x found
	ScopeTable# 7
	1--> <n,ID><x,ID>
	6--> <i,ID>
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 19: Token <LSQUARE> Lexeme [ found
Line# 19: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 19: Token <RSQUARE> Lexeme ] found
Line# 19: Token <RELOP> Lexeme >= found
Line# 19: Token <ID> Lexeme n found
	n already exists in the current ScopeTable
Line# 19: Token <LSQUARE> Lexeme [ found
Line# 19: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 19: Token <RSQUARE> Lexeme ] found
Line# 19: Token <LOGICOP> Lexeme && found
Line# 19: Token <ID> Lexeme y found
	ScopeTable# 7
	1--> <n,ID><x,ID>
	2--> <y,ID>
	6--> <i,ID>
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 19: Token <LSQUARE> Lexeme [ found
Line# 19: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 19: Token <RSQUARE> Lexeme ] found
Line# 19: Token <RELOP> Lexeme >= found
Line# 19: Token <ID> Lexeme n found
	n already exists in the current ScopeTable
Line# 19: Token <LSQUARE> Lexeme [ found
Line# 19: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 19: Token <RSQUARE> Lexeme ] found
Line# 19: Token <RPAREN> Lexeme ) found
Line# 19: Token <LCURL> Lexeme { found
Line# 20: Token <ID> Lexeme cout found
	ScopeTable# 8
	2--> <cout,ID>
	ScopeTable# 7
	1--> <n,ID><x,ID>
	2--> <y,ID>
	6--> <i,ID>
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 20: Token <BITOP> Lexeme << found
Line# 20: Token <SINGLE LINE STRING> Lexeme "YES\n" found
Line# 20: Token <SEMICOLON> Lexeme ; found
Line# 21: Token <RCURL> Lexeme } found
Line# 22: Token <ELSE> Lexeme else found
Line# 22: Token <LCURL> Lexeme { found
Line# 23: Token <ID> Lexeme cout found
	ScopeTable# 9
	2--> <cout,ID>
	ScopeTable# 7
	1--> <n,ID><x,ID>
	2--> <y,ID>
	6--> <i,ID>
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 23: Token <BITOP> Lexeme << found
Line# 23: Token <SINGLE LINE STRING> Lexeme "NO\n" found
Line# 23: Token <SEMICOLON> Lexeme ; found
Line# 24: Token <RCURL> Lexeme } found
Line# 25: Token <RCURL> Lexeme } found
Line# 26: Token <ELSE> Lexeme else found
Line# 26: Token <LCURL> Lexeme { found
Line# 27: Token <ID> Lexeme cout found
	ScopeTable# 10
	2--> <cout,ID>
	ScopeTable# 6
	1--> <n,ID>
	6--> <i,ID>
	ScopeTable# 4
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 2
	1--> <n,ID><x,ID>
	2--> <y,ID>
	5--> <cin,ID>
	6--> <i,ID>
	10--> <c,ID>
	ScopeTable# 1
	4--> <main,ID>
Line# 27: Token <BITOP> Lexeme << found
Line# 27: Token <SINGLE LINE STRING> Lexeme "OOPS!\n" found
Line# 27: Token <SEMICOLON> Lexeme ; found
Line# 28: Token <RCURL> Lexeme } found
Line# 29: Token <ID> Lexeme i found
	i already exists in the current ScopeTable
Line# 29: Token <INCOP> Lexeme ++ found
Line# 29: Token <SEMICOLON> Lexeme ; found
Line# 30: Token <RCURL> Lexeme } found
Line# 32: Token <RCURL> Lexeme } found
Line# 33: Token <RCURL> Lexeme } found
	ScopeTable# 1
	4--> <main,ID>
Total lines: 33
Total errors: 0
